/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as authenticationAuthenticationImport } from './routes/(authentication)/_authentication'
import { Route as appAppImport } from './routes/(app)/_app'
import { Route as authenticationAuthenticationVerifyImport } from './routes/(authentication)/_authentication.verify'
import { Route as authenticationAuthenticationSignupImport } from './routes/(authentication)/_authentication.signup'
import { Route as authenticationAuthenticationResetPasswordImport } from './routes/(authentication)/_authentication.reset-password'
import { Route as authenticationAuthenticationLoginImport } from './routes/(authentication)/_authentication.login'
import { Route as authenticationAuthenticationForgotPasswordImport } from './routes/(authentication)/_authentication.forgot-password'
import { Route as appAppDashboardLayoutImport } from './routes/(app)/_app.dashboard/_layout'
import { Route as appAppDashboardLayoutIndexImport } from './routes/(app)/_app.dashboard/_layout.index'
import { Route as appAppDashboardLayoutChartsImport } from './routes/(app)/_app.dashboard/_layout.charts'

// Create Virtual Routes

const authenticationImport = createFileRoute('/(authentication)')()
const appImport = createFileRoute('/(app)')()
const appAppDashboardImport = createFileRoute('/(app)/_app/dashboard')()

// Create/Update Routes

const authenticationRoute = authenticationImport.update({
  id: '/(authentication)',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authenticationAuthenticationRoute =
  authenticationAuthenticationImport.update({
    id: '/_authentication',
    getParentRoute: () => authenticationRoute,
  } as any)

const appAppRoute = appAppImport.update({
  id: '/_app',
  getParentRoute: () => appRoute,
} as any)

const appAppDashboardRoute = appAppDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => appAppRoute,
} as any)

const authenticationAuthenticationVerifyRoute =
  authenticationAuthenticationVerifyImport.update({
    id: '/verify',
    path: '/verify',
    getParentRoute: () => authenticationAuthenticationRoute,
  } as any)

const authenticationAuthenticationSignupRoute =
  authenticationAuthenticationSignupImport.update({
    id: '/signup',
    path: '/signup',
    getParentRoute: () => authenticationAuthenticationRoute,
  } as any)

const authenticationAuthenticationResetPasswordRoute =
  authenticationAuthenticationResetPasswordImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => authenticationAuthenticationRoute,
  } as any)

const authenticationAuthenticationLoginRoute =
  authenticationAuthenticationLoginImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authenticationAuthenticationRoute,
  } as any)

const authenticationAuthenticationForgotPasswordRoute =
  authenticationAuthenticationForgotPasswordImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => authenticationAuthenticationRoute,
  } as any)

const appAppDashboardLayoutRoute = appAppDashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => appAppDashboardRoute,
} as any)

const appAppDashboardLayoutIndexRoute = appAppDashboardLayoutIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => appAppDashboardLayoutRoute,
  } as any,
)

const appAppDashboardLayoutChartsRoute =
  appAppDashboardLayoutChartsImport.update({
    id: '/charts',
    path: '/charts',
    getParentRoute: () => appAppDashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_app': {
      id: '/(app)/_app'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAppImport
      parentRoute: typeof appRoute
    }
    '/(authentication)': {
      id: '/(authentication)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticationImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/_authentication': {
      id: '/(authentication)/_authentication'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticationAuthenticationImport
      parentRoute: typeof authenticationRoute
    }
    '/(authentication)/_authentication/forgot-password': {
      id: '/(authentication)/_authentication/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authenticationAuthenticationForgotPasswordImport
      parentRoute: typeof authenticationAuthenticationImport
    }
    '/(authentication)/_authentication/login': {
      id: '/(authentication)/_authentication/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authenticationAuthenticationLoginImport
      parentRoute: typeof authenticationAuthenticationImport
    }
    '/(authentication)/_authentication/reset-password': {
      id: '/(authentication)/_authentication/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authenticationAuthenticationResetPasswordImport
      parentRoute: typeof authenticationAuthenticationImport
    }
    '/(authentication)/_authentication/signup': {
      id: '/(authentication)/_authentication/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authenticationAuthenticationSignupImport
      parentRoute: typeof authenticationAuthenticationImport
    }
    '/(authentication)/_authentication/verify': {
      id: '/(authentication)/_authentication/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof authenticationAuthenticationVerifyImport
      parentRoute: typeof authenticationAuthenticationImport
    }
    '/(app)/_app/dashboard': {
      id: '/(app)/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appAppDashboardImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/dashboard/_layout': {
      id: '/(app)/_app/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appAppDashboardLayoutImport
      parentRoute: typeof appAppDashboardRoute
    }
    '/(app)/_app/dashboard/_layout/charts': {
      id: '/(app)/_app/dashboard/_layout/charts'
      path: '/charts'
      fullPath: '/dashboard/charts'
      preLoaderRoute: typeof appAppDashboardLayoutChartsImport
      parentRoute: typeof appAppDashboardLayoutImport
    }
    '/(app)/_app/dashboard/_layout/': {
      id: '/(app)/_app/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof appAppDashboardLayoutIndexImport
      parentRoute: typeof appAppDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface appAppDashboardLayoutRouteChildren {
  appAppDashboardLayoutChartsRoute: typeof appAppDashboardLayoutChartsRoute
  appAppDashboardLayoutIndexRoute: typeof appAppDashboardLayoutIndexRoute
}

const appAppDashboardLayoutRouteChildren: appAppDashboardLayoutRouteChildren = {
  appAppDashboardLayoutChartsRoute: appAppDashboardLayoutChartsRoute,
  appAppDashboardLayoutIndexRoute: appAppDashboardLayoutIndexRoute,
}

const appAppDashboardLayoutRouteWithChildren =
  appAppDashboardLayoutRoute._addFileChildren(
    appAppDashboardLayoutRouteChildren,
  )

interface appAppDashboardRouteChildren {
  appAppDashboardLayoutRoute: typeof appAppDashboardLayoutRouteWithChildren
}

const appAppDashboardRouteChildren: appAppDashboardRouteChildren = {
  appAppDashboardLayoutRoute: appAppDashboardLayoutRouteWithChildren,
}

const appAppDashboardRouteWithChildren = appAppDashboardRoute._addFileChildren(
  appAppDashboardRouteChildren,
)

interface appAppRouteChildren {
  appAppDashboardRoute: typeof appAppDashboardRouteWithChildren
}

const appAppRouteChildren: appAppRouteChildren = {
  appAppDashboardRoute: appAppDashboardRouteWithChildren,
}

const appAppRouteWithChildren =
  appAppRoute._addFileChildren(appAppRouteChildren)

interface appRouteChildren {
  appAppRoute: typeof appAppRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appAppRoute: appAppRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

interface authenticationAuthenticationRouteChildren {
  authenticationAuthenticationForgotPasswordRoute: typeof authenticationAuthenticationForgotPasswordRoute
  authenticationAuthenticationLoginRoute: typeof authenticationAuthenticationLoginRoute
  authenticationAuthenticationResetPasswordRoute: typeof authenticationAuthenticationResetPasswordRoute
  authenticationAuthenticationSignupRoute: typeof authenticationAuthenticationSignupRoute
  authenticationAuthenticationVerifyRoute: typeof authenticationAuthenticationVerifyRoute
}

const authenticationAuthenticationRouteChildren: authenticationAuthenticationRouteChildren =
  {
    authenticationAuthenticationForgotPasswordRoute:
      authenticationAuthenticationForgotPasswordRoute,
    authenticationAuthenticationLoginRoute:
      authenticationAuthenticationLoginRoute,
    authenticationAuthenticationResetPasswordRoute:
      authenticationAuthenticationResetPasswordRoute,
    authenticationAuthenticationSignupRoute:
      authenticationAuthenticationSignupRoute,
    authenticationAuthenticationVerifyRoute:
      authenticationAuthenticationVerifyRoute,
  }

const authenticationAuthenticationRouteWithChildren =
  authenticationAuthenticationRoute._addFileChildren(
    authenticationAuthenticationRouteChildren,
  )

interface authenticationRouteChildren {
  authenticationAuthenticationRoute: typeof authenticationAuthenticationRouteWithChildren
}

const authenticationRouteChildren: authenticationRouteChildren = {
  authenticationAuthenticationRoute:
    authenticationAuthenticationRouteWithChildren,
}

const authenticationRouteWithChildren = authenticationRoute._addFileChildren(
  authenticationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof authenticationAuthenticationRouteWithChildren
  '/forgot-password': typeof authenticationAuthenticationForgotPasswordRoute
  '/login': typeof authenticationAuthenticationLoginRoute
  '/reset-password': typeof authenticationAuthenticationResetPasswordRoute
  '/signup': typeof authenticationAuthenticationSignupRoute
  '/verify': typeof authenticationAuthenticationVerifyRoute
  '/dashboard': typeof appAppDashboardLayoutRouteWithChildren
  '/dashboard/charts': typeof appAppDashboardLayoutChartsRoute
  '/dashboard/': typeof appAppDashboardLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof authenticationAuthenticationRouteWithChildren
  '/forgot-password': typeof authenticationAuthenticationForgotPasswordRoute
  '/login': typeof authenticationAuthenticationLoginRoute
  '/reset-password': typeof authenticationAuthenticationResetPasswordRoute
  '/signup': typeof authenticationAuthenticationSignupRoute
  '/verify': typeof authenticationAuthenticationVerifyRoute
  '/dashboard': typeof appAppDashboardLayoutIndexRoute
  '/dashboard/charts': typeof appAppDashboardLayoutChartsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)': typeof appRouteWithChildren
  '/(app)/_app': typeof appAppRouteWithChildren
  '/(authentication)': typeof authenticationRouteWithChildren
  '/(authentication)/_authentication': typeof authenticationAuthenticationRouteWithChildren
  '/(authentication)/_authentication/forgot-password': typeof authenticationAuthenticationForgotPasswordRoute
  '/(authentication)/_authentication/login': typeof authenticationAuthenticationLoginRoute
  '/(authentication)/_authentication/reset-password': typeof authenticationAuthenticationResetPasswordRoute
  '/(authentication)/_authentication/signup': typeof authenticationAuthenticationSignupRoute
  '/(authentication)/_authentication/verify': typeof authenticationAuthenticationVerifyRoute
  '/(app)/_app/dashboard': typeof appAppDashboardRouteWithChildren
  '/(app)/_app/dashboard/_layout': typeof appAppDashboardLayoutRouteWithChildren
  '/(app)/_app/dashboard/_layout/charts': typeof appAppDashboardLayoutChartsRoute
  '/(app)/_app/dashboard/_layout/': typeof appAppDashboardLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/verify'
    | '/dashboard'
    | '/dashboard/charts'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/verify'
    | '/dashboard'
    | '/dashboard/charts'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/_app'
    | '/(authentication)'
    | '/(authentication)/_authentication'
    | '/(authentication)/_authentication/forgot-password'
    | '/(authentication)/_authentication/login'
    | '/(authentication)/_authentication/reset-password'
    | '/(authentication)/_authentication/signup'
    | '/(authentication)/_authentication/verify'
    | '/(app)/_app/dashboard'
    | '/(app)/_app/dashboard/_layout'
    | '/(app)/_app/dashboard/_layout/charts'
    | '/(app)/_app/dashboard/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRoute: typeof appRouteWithChildren
  authenticationRoute: typeof authenticationRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRoute: appRouteWithChildren,
  authenticationRoute: authenticationRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/(authentication)"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_app"
      ]
    },
    "/(app)/_app": {
      "filePath": "(app)/_app.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_app/dashboard"
      ]
    },
    "/(authentication)": {
      "filePath": "(authentication)",
      "children": [
        "/(authentication)/_authentication"
      ]
    },
    "/(authentication)/_authentication": {
      "filePath": "(authentication)/_authentication.tsx",
      "parent": "/(authentication)",
      "children": [
        "/(authentication)/_authentication/forgot-password",
        "/(authentication)/_authentication/login",
        "/(authentication)/_authentication/reset-password",
        "/(authentication)/_authentication/signup",
        "/(authentication)/_authentication/verify"
      ]
    },
    "/(authentication)/_authentication/forgot-password": {
      "filePath": "(authentication)/_authentication.forgot-password.tsx",
      "parent": "/(authentication)/_authentication"
    },
    "/(authentication)/_authentication/login": {
      "filePath": "(authentication)/_authentication.login.tsx",
      "parent": "/(authentication)/_authentication"
    },
    "/(authentication)/_authentication/reset-password": {
      "filePath": "(authentication)/_authentication.reset-password.tsx",
      "parent": "/(authentication)/_authentication"
    },
    "/(authentication)/_authentication/signup": {
      "filePath": "(authentication)/_authentication.signup.tsx",
      "parent": "/(authentication)/_authentication"
    },
    "/(authentication)/_authentication/verify": {
      "filePath": "(authentication)/_authentication.verify.tsx",
      "parent": "/(authentication)/_authentication"
    },
    "/(app)/_app/dashboard": {
      "filePath": "(app)/_app.dashboard",
      "parent": "/(app)/_app",
      "children": [
        "/(app)/_app/dashboard/_layout"
      ]
    },
    "/(app)/_app/dashboard/_layout": {
      "filePath": "(app)/_app.dashboard/_layout.tsx",
      "parent": "/(app)/_app/dashboard",
      "children": [
        "/(app)/_app/dashboard/_layout/charts",
        "/(app)/_app/dashboard/_layout/"
      ]
    },
    "/(app)/_app/dashboard/_layout/charts": {
      "filePath": "(app)/_app.dashboard/_layout.charts.tsx",
      "parent": "/(app)/_app/dashboard/_layout"
    },
    "/(app)/_app/dashboard/_layout/": {
      "filePath": "(app)/_app.dashboard/_layout.index.tsx",
      "parent": "/(app)/_app/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
